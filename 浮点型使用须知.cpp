#include <iostream>
#include <iomanip>
using namespace::std;
int main()
{
    float a=0,b=0;
    a = 123456.789e5;
    b = a + 20;
    cout << setprecision(20) << b << endl; 
    //正确数据应该为12345678920   
    //计算机输出的为12345678848
    /*
    为什么会是这个结果呢？ 
    因为float型它的计算精度最多是7位。 
    也就是说，7位之外就是超出了计算精度的部分。 
    也就意味着，虽然正确的结果应该是这样的，
    但是这个结果对于float型的数据而言， 
    已经不在它的精度范围之内了。
    那么这个例子告诉我们什么呢？
    告诉我们这样一件事情， 
    就说我们在计算的时候啊，
    应该尽量避免把一个很大的数与一个很小的数直接进行相加或者相减的运算。
    否则由于float型的 精度的问题，
    有可能这个很小的数就要丢失掉了。 
    就像这个例子里头，那么这个20加不加，
    最后的结果里头根本就看不出来。 
    这是在使用浮点型的数的时候特别需要注意的一个问题。
    */         
    system("pause");
    return 0;
}